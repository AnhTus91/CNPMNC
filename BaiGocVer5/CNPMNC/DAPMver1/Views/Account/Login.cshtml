@model LoginViewModel
@{
    Layout = null;
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <span class="alert-icon"><i class="fa fa-exclamation-circle"></i></span>
        @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}


<div class="row justify-content-md-center" style="width:1200px;justify-content:center;margin:auto">
    <div class="col-md-5" style="width:300px;margin:auto">

        <div class="card">
            <div class="card-header">
                <div class="card-title">Đăng nhập</div>
            </div>
            <div class="card-body">
                <form asp-action="Login" method="post">
                    <div class="form-group">
                        <label>Email:</label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email"></span>
                    </div>
                    <div class="form-group">
                        <label>Mật khẩu:</label>
                        <input asp-for="MatKhau" type="password" class="form-control" />
                        <span asp-validation-for="MatKhau"></span>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-success">Đăng nhập</button>
                    </div>
                </form>
            </div>
            <span>Bạn chưa có tài khoản</span>
            <p>
                @Html.ActionLink("Đăng ký", "Register", "Account")
            </p>

            <p>
                @Html.ActionLink("Quên mật khẩu?", "ForgotPassword", "Account")
            </p>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewData["ErrorMessage"] as string))
{
    <div>@ViewData["ErrorMessage"]</div>
}

<style>
    /* Center the login form container */
    .row {
        margin: 0 auto;
        max-width: 1200px;
    }

    /* Style for the card */
    .card {
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        margin-top: 50px;
        border: none;
    }

    .card-header {
        background-color: #007bff; /* Primary color for header */
        padding: 20px;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .card-title {
        font-size: 24px;
        color: white; /* White text for card title */
        text-align: center;
        margin: 0;
    }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        padding: 10px;
        font-size: 16px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
            outline: none;
        }

    /* Button styles */
    .btn-success {
        background-color: #28a745;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        width: 100%;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    /* Button for registration */
    .btn-info {
        background-color: #17a2b8;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        width: 100%;
        transition: background-color 0.3s ease;
    }

        .btn-info:hover {
            background-color: #138496;
        }

    /* Error message badge */
    .badge-danger {
        color: white;
        background-color: #dc3545;
        padding: 5px;
        border-radius: 5px;
        margin-top: 5px;
    }

    /* Warning for incorrect credentials */
    .badge-warning {
        background-color: #ffc107;
        padding: 10px;
        display: block;
        text-align: center;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    /* Forgot password link */
    p a {
        color: #007bff;
        text-decoration: none;
    }

        p a:hover {
            text-decoration: underline;
        }

    /* Text center */
    .text-center {
        text-align: center;
    }

    /* Label for registration prompt */
    label {
        font-size: 16px;
        color: #333;
        display: block;
        margin-bottom: 10px;
    }



    /* Thông báo lỗi */
    .alert {
        padding: 15px;
        margin: 10px 0;
        border-radius: 5px;
        font-size: 16px;
        position: relative;
        transition: opacity 0.3s ease;
    }

    /* Màu sắc thông báo lỗi */
    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    /* Thông báo thành công */
    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    /* Thông báo thông tin */
    .alert-info {
        background-color: #d1ecf1;
        color: #0c5460;
        border: 1px solid #bee5eb;
    }

    /* Thông báo cảnh báo */
    .alert-warning {
        background-color: #fff3cd;
        color: #856404;
        border: 1px solid #ffeeba;
    }

    /* Icon bên trái thông báo */
    .alert .alert-icon {
        position: absolute;
        top: 50%;
        left: 15px;
        transform: translateY(-50%);
    }

    /* Thêm hiệu ứng cho thông báo */
    .alert-dismissible {
        padding-right: 35px;
    }

        .alert-dismissible .close {
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            font-size: 20px;
            color: inherit;
            opacity: 0.5;
        }

            /* Khi hover vào close button */
            .alert-dismissible .close:hover {
                opacity: 1;
            }

</style>
<script>
    // Tự động tắt thông báo sau 5 giây
    setTimeout(function () {
        $('.alert').fadeOut('slow');
    }, 5000);
</script>